name: analyze-and-update-sheets

on:
  workflow_dispatch:
  schedule:
    - cron: "30 23 * * *"  # KST 08:30

permissions:
  contents: read
  actions: read

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 150
    env:
      CI: "1"
      PYTHONUNBUFFERED: "1"
      TZ: Asia/Seoul
      SHEET_ID: ${{ secrets.SHEET_ID }}
      SA_JSON: ${{ secrets.GDRIVE_SA_JSON }}
      SOURCE_REPO_PAT: ${{ secrets.SOURCE_REPO_PAT }}
      SRC_REPO: ckh3455/file-automation
      SRC_WORKFLOW: molit.yml
      SRC_ARTIFACT: molit-xlsx

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 👉 외부 레포 최신 성공 런에서 artifact 다운로드 (액션 사용: 단순/안정)
      - name: Download artifact (latest success from ${{ env.SRC_REPO }})
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.SOURCE_REPO_PAT }}
          repo: ${{ env.SRC_REPO }}
          workflow: ${{ env.SRC_WORKFLOW }}
          workflow_conclusion: success
          branch: main
          name: ${{ env.SRC_ARTIFACT }}
          path: artifacts

      # 👉 신선도 검사(<=12h 또는 파일명 날짜가 오늘): 출력 is_fresh=true/false
      - name: Freshness check (<=12h or filename date == today KST)
        id: fresh
        shell: bash
        run: |
          set -euo pipefail

          echo "=== Freshness check start ==="
          if ! find artifacts -type f -name "*.xlsx" | grep -q . ; then
            echo "No .xlsx files under artifacts/"
            echo "is_fresh=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          python - <<'PY'
import pathlib, datetime, re, sys, os
root = pathlib.Path("artifacts")
files = sorted(root.rglob("*.xlsx"), key=lambda p: p.stat().st_mtime)
kst_now = datetime.datetime.utcnow() + datetime.timedelta(hours=9)
today = kst_now.date()

def kst(ts): return datetime.datetime.utcfromtimestamp(ts) + datetime.timedelta(hours=9)

print(f"KST now: {kst_now} (today={today})")
print("Files (last 10 by mtime):")
for p in files[-10:]:
    print(" -", p.name, "| mtime(KST)=", kst(p.stat().st_mtime))

latest = files[-1]
age_h = (kst_now - kst(latest.stat().st_mtime)).total_seconds()/3600
fresh_by_mtime = age_h <= 12.0

def hint_is_today(name: str) -> bool:
    # YYYYMMDD
    m = re.findall(r'(20\d{2})[-_/ ]?(\d{1,2})[-_/ ]?(\d{1,2})', name)
    if m:
        y, M, d = map(int, m[-1])
        try:
            return datetime.date(y, M, d) == today
        except ValueError:
            pass
    # YYMMDD (예: 251006)
    m2 = re.findall(r'(^|[^0-9])(\d{6})([^0-9]|$)', name)
    if m2:
        yymmdd = m2[-1][1]
        yy = int(yymmdd[0:2]); mm = int(yymmdd[2:4]); dd = int(yymmdd[4:6])
        y_full = 2000 + yy
        try:
            return datetime.date(y_full, mm, dd) == today
        except ValueError:
            pass
    return False

fresh_by_name = any(hint_is_today(p.name) for p in files)

print(f"latest={latest.name}, age_h={age_h:.2f}, fresh_by_mtime={fresh_by_mtime}, fresh_by_name={fresh_by_name}")
status = "true" if (fresh_by_mtime or fresh_by_name) else "false"
print("is_fresh:", status)

# GITHUB_OUTPUT에 기록
out = os.environ.get("GITHUB_OUTPUT")
with open(out, "a", encoding="utf-8") as f:
    f.write(f"is_fresh={status}\n")
PY

      - name: List downloaded files
        run: |
          echo "=== downloaded files ==="
          find artifacts -type f -printf "%TY-%Tm-%Td %TT %p\n" | sort || true

      - name: Run analysis & update
        if: ${{ steps.fresh.outputs.is_fresh == 'true' }}
        env:
          ARTIFACTS_DIR: artifacts
        run: |
          python scripts/analyze_and_update.py \
            --artifacts-dir artifacts \
            --sheet-id "$SHEET_ID"

      - name: Skip note (stale artifacts)
        if: ${{ steps.fresh.outputs.is_fresh != 'true' }}
        run: |
          echo "::notice::Artifacts are not fresh (older than 12h or not today's date). Skipping this run."

      - name: Preview analyze_report (always)
        if: always()
        run: |
          echo "== analyze_report tree =="; ls -alR analyze_report || true
          echo "---- latest.log (head) ----"; sed -n '1,220p' analyze_report/latest.log || true
          echo "---- run logs list ----"; ls -al analyze_report/run-*.log 2>/dev/null || true
          echo "---- where_written.txt ----"; cat analyze_report/where_written.txt 2>/dev/null || true

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: analyze-report
          path: analyze_report/**
          retention-days: 14
          compression-level: 6
