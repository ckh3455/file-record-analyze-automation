name: analyze-and-update-sheets

on:
  workflow_dispatch:
  schedule:
    # KST 08:30 (UTC 23:30)
    - cron: "30 23 * * *"

permissions:
  contents: read
  actions: read

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      CI: "1"
      PYTHONUNBUFFERED: "1"
      SHEET_ID: ${{ secrets.SHEET_ID }}
      SA_JSON:  ${{ secrets.GDRIVE_SA_JSON }}
      SOURCE_REPO_PAT: ${{ secrets.SOURCE_REPO_PAT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) 기존 이름으로 먼저 시도
      - name: Download artifacts (exact)
        id: dl1
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.SOURCE_REPO_PAT }}
          repo: ckh3455/file-automation
          workflow: molit.yml
          workflow_conclusion: success
          branch: main
          name: molit-xlsx
          path: artifacts

      # 2) 실패하면 정규식(outputs-*)으로 재시도
      - name: Download artifacts (fallback regex)
        id: dl2
        if: steps.dl1.outcome == 'failure'
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.SOURCE_REPO_PAT }}
          repo: ckh3455/file-automation
          workflow: molit.yml
          workflow_conclusion: success
          branch: main
          name: ^outputs-.*$
          name_is_regexp: true
          path: artifacts

      # 3) 실제 수신 검증: xlsx 없으면 실패로 종료 (원인 파악 쉬움)
      - name: Verify artifacts exist
        run: |
          echo "== downloaded =="
          find artifacts -type f -maxdepth 2 -printf "%p\n" || true
          if ! find artifacts -type f -name "*.xlsx" -print -quit | grep -q .; then
            echo "::error::No XLSX artifacts found. Check upstream artifact name."
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run analysis & update
        run: |
          python scripts/analyze_and_update.py \
            --artifacts-dir artifacts \
            --sheet-id "$SHEET_ID"

      - name: Preview analyze_report (always)
        if: always()
        run: |
          echo "== analyze_report tree =="; ls -alR analyze_report || true
          echo "---- latest.log (head) ----"; sed -n '1,220p' analyze_report/latest.log || true
          echo "---- run logs list ----"; ls -al analyze_report/run-*.log 2>/dev/null || true
          echo "---- where_written.txt ----"; cat analyze_report/where_written.txt 2>/dev/null || true

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: analyze-report
          path: analyze_report/**
          if-no-files-found: warn
          retention-days: 14
          compression-level: 6
