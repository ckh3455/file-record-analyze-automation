name: analyze-and-update-sheets

on:
  workflow_dispatch:
  schedule:
    - cron: "20 0 * * *"   # UTC 00:20 = KST 09:20

permissions:
  contents: read
  actions: read

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      CI: "1"
      PYTHONUNBUFFERED: "1"
      SHEET_ID: ${{ secrets.SHEET_ID }}
      SA_JSON:  ${{ secrets.GDRIVE_SA_JSON }}
      OUT_DIR: output

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts from ckh3455/file-automation (latest success)
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.SOURCE_REPO_PAT }}
          repo: ckh3455/file-automation
          workflow: molit.yml
          workflow_conclusion: success
          branch: main
          path: artifacts

      - name: Show artifacts tree
        run: |
          echo "== artifacts tree ==" && ls -alR artifacts || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write SA JSON to file (validate)
        run: |
          python - <<'PY'
          import os, json, pathlib, sys
          raw=os.environ.get("SA_JSON","").strip()
          if not raw:
              print("::error::GDRIVE_SA_JSON is empty"); sys.exit(1)
          try:
              obj=json.loads(raw)
          except Exception as e:
              print(f"::error::Invalid SA JSON: {e}"); sys.exit(1)
          pathlib.Path("sa.json").write_text(json.dumps(obj),encoding="utf-8")
          print("sa.json written.")
          PY

      - name: Clean report dir
        run: |
          rm -rf analyze_report
          mkdir -p analyze_report

      # 현재 스프레드시트 탭 이름을 전부 로그로 남겨서 매칭 상황 점검
      - name: List worksheet titles
        run: |
          python - <<'PY'
          import os, json, gspread
          from google.oauth2.service_account import Credentials
          sid=os.environ["SHEET_ID"]
          creds = Credentials.from_service_account_info(
              json.loads(os.environ["SA_JSON"]),
              scopes=["https://www.googleapis.com/auth/spreadsheets",
                      "https://www.googleapis.com/auth/drive"]
          )
          gc = gspread.authorize(creds)
          sh = gc.open_by_key(sid)
          print("== SHEET TITLES ==")
          for ws in sh.worksheets():
              print("-", ws.title)
          PY

      - name: Run analysis & update
        run: |
          python scripts/analyze_and_update.py --artifacts-dir artifacts --sa sa.json --sheet-id "$SHEET_ID"

      - name: Preview analyze_report (always)
        if: always()
        run: |
          echo "== analyze_report tree =="
          ls -alR analyze_report || true
          echo "---- latest.log (tail) ----"
          tail -n 200 analyze_report/latest.log || true
          echo "---- where_written.txt ----"
          cat analyze_report/where_written.txt 2>/dev/null || true

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: analyze-report
          path: analyze_report/**
          if-no-files-found: warn
          retention-days: 14
          compression-level: 6
